- _id:
    _bsontype: ObjectID
    id: !<tag:yaml.org,2002:binary> UK1eKeiSKU6FAcbI
  url: 'https://api.github.com/repos/ros-visualization/rviz/issues/471'
  closed_at: '2012-09-19T22:14:43Z'
  created_at: '2012-09-19T22:14:42Z'
  labels_url: 'https://api.github.com/repos/ros-visualization/rviz/issues/471/labels{/name}'
  body: >-
    When I run 

    {{{

    $ rosdep check rviz_qt

    }}}

    I get the error:

    {{{

    No installers found for rosdep [pyside], OS version [oneiric].  Rule:

    ...

    }}}


    So I checked the rosdep.xaml file located in the root folder of the vis_exp
    stack and found that it uses the Ubuntu version numbers (11.04, 11.10...)
    instead of the Ubuntu codenames (natty, oneiric...).

    After some searching on ros.org I found this:

    http://www.ros.org/reps/rep-0111.html#ubuntu-codename-usage

    Stating that the use of version numbers is not supported anymore from
    Oneiric on.


    So this should be changed at least for oneiric and newer dependencies, if
    not simply for all...


    trac data:
     * Owner: **hersh**
     * Reporter: **dorianscholz**
     * Reported at: **Wed Dec 21 08:22:57 2011**
     * URL: http://code.ros.org/trac/ros-pkg/ticket/5312
  title: >-
    rviz_qt's rosdep.yaml has wrong version descriptors for ubuntu oneiric and
    newer  (ros-pkg ticket #5312)
  pull_request:
    diff_url: null
    patch_url: null
    html_url: null
  assignee: null
  user:
    url: 'https://api.github.com/users/hershwg'
    starred_url: 'https://api.github.com/users/hershwg/starred{/owner}{/repo}'
    repos_url: 'https://api.github.com/users/hershwg/repos'
    organizations_url: 'https://api.github.com/users/hershwg/orgs'
    followers_url: 'https://api.github.com/users/hershwg/followers'
    received_events_url: 'https://api.github.com/users/hershwg/received_events'
    gists_url: 'https://api.github.com/users/hershwg/gists{/gist_id}'
    following_url: 'https://api.github.com/users/hershwg/following'
    subscriptions_url: 'https://api.github.com/users/hershwg/subscriptions'
    events_url: 'https://api.github.com/users/hershwg/events{/privacy}'
    gravatar_id: 59c9a5865de1e52681657f3770b7b07d
    id: 2372515
    avatar_url: >-
      https://secure.gravatar.com/avatar/59c9a5865de1e52681657f3770b7b07d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
    login: hershwg
  comments_url: 'https://api.github.com/repos/ros-visualization/rviz/issues/471/comments'
  milestone: null
  number: 471
  updated_at: '2012-09-19T22:14:43Z'
  labels:
    - url: 'https://api.github.com/repos/ros-visualization/rviz/labels/bug'
      color: fc2929
      name: bug
    - url: 'https://api.github.com/repos/ros-visualization/rviz/labels/minor'
      color: ededed
      name: minor
  state: closed
  id: 6996627
  events_url: 'https://api.github.com/repos/ros-visualization/rviz/issues/471/events'
  comments: 1
  html_url: 'https://github.com/ros-visualization/rviz/issues/471'
  repo: rviz
  owner: ros-visualization
  data_comments: []
- _id:
    _bsontype: ObjectID
    id: !<tag:yaml.org,2002:binary> WxqnSmSA/YKrC/5r
  url: 'https://api.github.com/repos/ros/geometry2/issues/299'
  repository_url: 'https://api.github.com/repos/ros/geometry2'
  labels_url: 'https://api.github.com/repos/ros/geometry2/issues/299/labels{/name}'
  comments_url: 'https://api.github.com/repos/ros/geometry2/issues/299/comments'
  events_url: 'https://api.github.com/repos/ros/geometry2/issues/299/events'
  html_url: 'https://github.com/ros/geometry2/issues/299'
  id: 330714132
  node_id: MDU6SXNzdWUzMzA3MTQxMzI=
  number: 299
  title: invalid test dependency
  user:
    login: dirk-thomas
    id: 1335366
    node_id: MDQ6VXNlcjEzMzUzNjY=
    avatar_url: 'https://avatars1.githubusercontent.com/u/1335366?v=4'
    gravatar_id: ''
    url: 'https://api.github.com/users/dirk-thomas'
    html_url: 'https://github.com/dirk-thomas'
    followers_url: 'https://api.github.com/users/dirk-thomas/followers'
    following_url: 'https://api.github.com/users/dirk-thomas/following{/other_user}'
    gists_url: 'https://api.github.com/users/dirk-thomas/gists{/gist_id}'
    starred_url: 'https://api.github.com/users/dirk-thomas/starred{/owner}{/repo}'
    subscriptions_url: 'https://api.github.com/users/dirk-thomas/subscriptions'
    organizations_url: 'https://api.github.com/users/dirk-thomas/orgs'
    repos_url: 'https://api.github.com/users/dirk-thomas/repos'
    events_url: 'https://api.github.com/users/dirk-thomas/events{/privacy}'
    received_events_url: 'https://api.github.com/users/dirk-thomas/received_events'
    type: User
    site_admin: false
  labels:
    - id: 23875580
      node_id: MDU6TGFiZWwyMzg3NTU4MA==
      url: 'https://api.github.com/repos/ros/geometry2/labels/bug'
      name: bug
      color: fc2929
      default: true
  state: open
  locked: false
  assignee: null
  assignees: []
  milestone: null
  comments: 0
  created_at: '2018-06-08T15:56:49Z'
  updated_at: '2018-06-08T15:56:49Z'
  closed_at: null
  author_association: MEMBER
  body: >-
    The test launch file `test_tf2_bullet.launch` tries to use a test executable
    from the `test_tf2`
    (https://github.com/ros/geometry2/blob/6eed82a013fa2f575f12fca92e5fd105518a1441/test_tf2/test/test_tf2_bullet.launch#L2)
    which is neither depended on nor is that binary being installed. Maybe it is
    supposed to use the local executable instead
    (https://github.com/ros/geometry2/blob/6eed82a013fa2f575f12fca92e5fd105518a1441/test_tf2/CMakeLists.txt#L47-L48)?
  closed_by: null
  repo: geometry2
  owner: ros
  data_comments: []
- _id:
    _bsontype: ObjectID
    id: !<tag:yaml.org,2002:binary> UNwe5u3stTk3AD6A
  body: "Currently the velocity smoother adjusts the velocities independently, what can cause the original velocity heading (vector orientation) to be modified as well.\r\n\r\nPlease adjust the smoothing in the way that the original heading is not changed."
  milestone: null
  title: keep direction constant when smoothing velocities
  html_url: 'https://github.com/yujinrobot/yujin_ocs/issues/3'
  labels_url: 'https://api.github.com/repos/yujinrobot/yujin_ocs/issues/3/labels{/name}'
  assignee:
    type: User
    gists_url: 'https://api.github.com/users/corot/gists{/gist_id}'
    events_url: 'https://api.github.com/users/corot/events{/privacy}'
    followers_url: 'https://api.github.com/users/corot/followers'
    avatar_url: >-
      https://secure.gravatar.com/avatar/9d1f9be65fdb1506922dc4cd3816ec42?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
    following_url: 'https://api.github.com/users/corot/following'
    organizations_url: 'https://api.github.com/users/corot/orgs'
    url: 'https://api.github.com/users/corot'
    repos_url: 'https://api.github.com/users/corot/repos'
    starred_url: 'https://api.github.com/users/corot/starred{/owner}{/repo}'
    gravatar_id: 9d1f9be65fdb1506922dc4cd3816ec42
    login: corot
    received_events_url: 'https://api.github.com/users/corot/received_events'
    subscriptions_url: 'https://api.github.com/users/corot/subscriptions'
    id: 322610
  events_url: 'https://api.github.com/repos/yujinrobot/yujin_ocs/issues/3/events'
  updated_at: '2012-12-14T08:09:50Z'
  comments: 1
  state: closed
  url: 'https://api.github.com/repos/yujinrobot/yujin_ocs/issues/3'
  pull_request:
    html_url: null
    patch_url: null
    diff_url: null
  closed_at: '2012-12-14T08:09:50Z'
  created_at: '2012-12-13T02:12:47Z'
  user:
    type: User
    gists_url: 'https://api.github.com/users/bit-pirate/gists{/gist_id}'
    events_url: 'https://api.github.com/users/bit-pirate/events{/privacy}'
    followers_url: 'https://api.github.com/users/bit-pirate/followers'
    avatar_url: >-
      https://secure.gravatar.com/avatar/dec89fe7edb3199a81905cc8c0ddd658?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
    following_url: 'https://api.github.com/users/bit-pirate/following'
    organizations_url: 'https://api.github.com/users/bit-pirate/orgs'
    url: 'https://api.github.com/users/bit-pirate'
    repos_url: 'https://api.github.com/users/bit-pirate/repos'
    starred_url: 'https://api.github.com/users/bit-pirate/starred{/owner}{/repo}'
    gravatar_id: dec89fe7edb3199a81905cc8c0ddd658
    login: bit-pirate
    received_events_url: 'https://api.github.com/users/bit-pirate/received_events'
    subscriptions_url: 'https://api.github.com/users/bit-pirate/subscriptions'
    id: 1136833
  id: 9239889
  labels:
    - url: 'https://api.github.com/repos/yujinrobot/yujin_ocs/labels/bug'
      name: bug
      color: fc2929
  number: 3
  comments_url: 'https://api.github.com/repos/yujinrobot/yujin_ocs/issues/3/comments'
  repo: yujin_ocs
  owner: yujinrobot
  data_comments:
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UN6+U+iSKWtvAPxG
      created_at: '2012-12-14T08:09:50Z'
      body: >-
        We should rename this package to diff_drive_vel_smoother or something
        like that. Sooner or latter we will have an omni base a then I will
        recover the previous version smoothing each dof separately.
      url: >-
        https://api.github.com/repos/yujinrobot/yujin_ocs/issues/comments/11368182
      updated_at: '2012-12-14T08:09:50Z'
      user:
        type: User
        followers_url: 'https://api.github.com/users/corot/followers'
        login: corot
        gists_url: 'https://api.github.com/users/corot/gists{/gist_id}'
        following_url: 'https://api.github.com/users/corot/following'
        organizations_url: 'https://api.github.com/users/corot/orgs'
        events_url: 'https://api.github.com/users/corot/events{/privacy}'
        repos_url: 'https://api.github.com/users/corot/repos'
        received_events_url: 'https://api.github.com/users/corot/received_events'
        url: 'https://api.github.com/users/corot'
        subscriptions_url: 'https://api.github.com/users/corot/subscriptions'
        starred_url: 'https://api.github.com/users/corot/starred{/owner}{/repo}'
        id: 322610
        gravatar_id: 9d1f9be65fdb1506922dc4cd3816ec42
        avatar_url: >-
          https://secure.gravatar.com/avatar/9d1f9be65fdb1506922dc4cd3816ec42?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
      id: 11368182
      issue_url: 'https://api.github.com/repos/yujinrobot/yujin_ocs/issues/9239889'
      owner: yujinrobot
      repo: yujin_ocs
      issue_id: 3
- _id:
    _bsontype: ObjectID
    id: !<tag:yaml.org,2002:binary> UK1eKeiSKU6FAccv
  url: 'https://api.github.com/repos/ros-visualization/rviz/issues/347'
  closed_at: '2012-09-19T22:10:13Z'
  created_at: '2012-09-19T22:10:12Z'
  labels_url: 'https://api.github.com/repos/ros-visualization/rviz/issues/347/labels{/name}'
  body: >-
    rxtools/wxswig/etc... are in the rx stack now. Please update and re-release
    into unstable. This will likely require 1.2 branching


    trac data:
     * Owner: **jfaust**
     * Reporter: **kwc**
     * Reported at: **Fri Sep  3 19:37:20 2010**
     * URL: http://code.ros.org/trac/ros-pkg/ticket/4404
  title: >-
    update visualization and visualization_common to depend on rx  (ros-pkg
    ticket #4404)
  assignee: null
  user:
    url: 'https://api.github.com/users/hershwg'
    received_events_url: 'https://api.github.com/users/hershwg/received_events'
    organizations_url: 'https://api.github.com/users/hershwg/orgs'
    followers_url: 'https://api.github.com/users/hershwg/followers'
    gists_url: 'https://api.github.com/users/hershwg/gists{/gist_id}'
    following_url: 'https://api.github.com/users/hershwg/following'
    avatar_url: >-
      https://secure.gravatar.com/avatar/59c9a5865de1e52681657f3770b7b07d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
    starred_url: 'https://api.github.com/users/hershwg/starred{/owner}{/repo}'
    subscriptions_url: 'https://api.github.com/users/hershwg/subscriptions'
    repos_url: 'https://api.github.com/users/hershwg/repos'
    gravatar_id: 59c9a5865de1e52681657f3770b7b07d
    id: 2372515
    events_url: 'https://api.github.com/users/hershwg/events{/privacy}'
    login: hershwg
  milestone: null
  number: 347
  updated_at: '2012-09-19T22:10:13Z'
  labels:
    - url: 'https://api.github.com/repos/ros-visualization/rviz/labels/bug'
      color: fc2929
      name: bug
    - url: 'https://api.github.com/repos/ros-visualization/rviz/labels/major'
      color: ededed
      name: major
  pull_request:
    patch_url: null
    diff_url: null
    html_url: null
  state: closed
  id: 6996392
  comments: 0
  html_url: 'https://github.com/ros-visualization/rviz/issues/347'
  events_url: 'https://api.github.com/repos/ros-visualization/rviz/issues/347/events'
  comments_url: 'https://api.github.com/repos/ros-visualization/rviz/issues/347/comments'
  repo: rviz
  owner: ros-visualization
  data_comments: []
- _id:
    _bsontype: ObjectID
    id: !<tag:yaml.org,2002:binary> VNzzg701Q11gABlu
  url: 'https://api.github.com/repos/PR2/pr2_simulator/issues/108'
  labels_url: 'https://api.github.com/repos/PR2/pr2_simulator/issues/108/labels{/name}'
  comments_url: 'https://api.github.com/repos/PR2/pr2_simulator/issues/108/comments'
  events_url: 'https://api.github.com/repos/PR2/pr2_simulator/issues/108/events'
  html_url: 'https://github.com/PR2/pr2_simulator/issues/108'
  id: 57501000
  number: 108
  title: Missing dependency on PCL
  user:
    login: dirk-thomas
    id: 1335366
    avatar_url: 'https://avatars.githubusercontent.com/u/1335366?v=3'
    gravatar_id: ''
    url: 'https://api.github.com/users/dirk-thomas'
    html_url: 'https://github.com/dirk-thomas'
    followers_url: 'https://api.github.com/users/dirk-thomas/followers'
    following_url: 'https://api.github.com/users/dirk-thomas/following{/other_user}'
    gists_url: 'https://api.github.com/users/dirk-thomas/gists{/gist_id}'
    starred_url: 'https://api.github.com/users/dirk-thomas/starred{/owner}{/repo}'
    subscriptions_url: 'https://api.github.com/users/dirk-thomas/subscriptions'
    organizations_url: 'https://api.github.com/users/dirk-thomas/orgs'
    repos_url: 'https://api.github.com/users/dirk-thomas/repos'
    events_url: 'https://api.github.com/users/dirk-thomas/events{/privacy}'
    received_events_url: 'https://api.github.com/users/dirk-thomas/received_events'
    type: User
    site_admin: false
  labels:
    - url: 'https://api.github.com/repos/PR2/pr2_simulator/labels/bug'
      name: bug
      color: fc2929
  state: open
  locked: false
  assignee: null
  milestone: null
  comments: 0
  created_at: '2015-02-12T18:39:59Z'
  updated_at: '2015-02-12T18:39:59Z'
  closed_at: null
  body: "The CMakeLists.txt requires PCL (https://github.com/PR2/pr2_simulator/blob/d41a9c603c4e07359daa60de01a1f78448d1372b/pr2_gazebo_plugins/CMakeLists.txt#L96) but the package.xml file does not list it as a dependency.\r\n\r\nhttp://54.183.26.131:8080/job/Ibin_uT64__pr2_gazebo_plugins__ubuntu_trusty_amd64__binary/1/console"
  repo: pr2_simulator
  owner: PR2
  data_comments:
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> VNz8Gr01Q02UABps
      url: 'https://api.github.com/repos/PR2/pr2_simulator/issues/comments/74133391'
      html_url: 'https://github.com/PR2/pr2_simulator/issues/108#issuecomment-74133391'
      issue_url: 'https://api.github.com/repos/PR2/pr2_simulator/issues/108'
      id: 74133391
      user:
        login: TheDash
        id: 1786601
        avatar_url: 'https://avatars.githubusercontent.com/u/1786601?v=3'
        gravatar_id: ''
        url: 'https://api.github.com/users/TheDash'
        html_url: 'https://github.com/TheDash'
        followers_url: 'https://api.github.com/users/TheDash/followers'
        following_url: 'https://api.github.com/users/TheDash/following{/other_user}'
        gists_url: 'https://api.github.com/users/TheDash/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/TheDash/starred{/owner}{/repo}'
        subscriptions_url: 'https://api.github.com/users/TheDash/subscriptions'
        organizations_url: 'https://api.github.com/users/TheDash/orgs'
        repos_url: 'https://api.github.com/users/TheDash/repos'
        events_url: 'https://api.github.com/users/TheDash/events{/privacy}'
        received_events_url: 'https://api.github.com/users/TheDash/received_events'
        type: User
        site_admin: false
      created_at: '2015-02-12T19:16:38Z'
      updated_at: '2015-02-12T19:16:38Z'
      body: >-
        Looks like the PCL dependency wasn't required at all, and so I've
        removed it.
        https://github.com/PR2/pr2_simulator/commit/7196212fb6ecebcd0ff9765cc5ae11716d999ebd
      repo: pr2_simulator
      owner: PR2
      issue_id: 108
- _id:
    _bsontype: ObjectID
    id: !<tag:yaml.org,2002:binary> Un6ctL01Q+2vAAEy
  url: 'https://api.github.com/repos/ros/diagnostics/issues/14'
  labels_url: 'https://api.github.com/repos/ros/diagnostics/issues/14/labels{/name}'
  comments_url: 'https://api.github.com/repos/ros/diagnostics/issues/14/comments'
  events_url: 'https://api.github.com/repos/ros/diagnostics/issues/14/events'
  html_url: 'https://github.com/ros/diagnostics/issues/14'
  id: 22393340
  number: 14
  title: fix reference to example.cpp in manifest.dox file
  user:
    login: dirk-thomas
    id: 1335366
    avatar_url: >-
      https://0.gravatar.com/avatar/00f79f6be5722ab3a1b3ece2cd32bb35?d=https%3A%2F%2Fidenticons.github.com%2F0c4fa44dd82805398e25508d93341849.png&r=x
    gravatar_id: 00f79f6be5722ab3a1b3ece2cd32bb35
    url: 'https://api.github.com/users/dirk-thomas'
    html_url: 'https://github.com/dirk-thomas'
    followers_url: 'https://api.github.com/users/dirk-thomas/followers'
    following_url: 'https://api.github.com/users/dirk-thomas/following{/other_user}'
    gists_url: 'https://api.github.com/users/dirk-thomas/gists{/gist_id}'
    starred_url: 'https://api.github.com/users/dirk-thomas/starred{/owner}{/repo}'
    subscriptions_url: 'https://api.github.com/users/dirk-thomas/subscriptions'
    organizations_url: 'https://api.github.com/users/dirk-thomas/orgs'
    repos_url: 'https://api.github.com/users/dirk-thomas/repos'
    events_url: 'https://api.github.com/users/dirk-thomas/events{/privacy}'
    received_events_url: 'https://api.github.com/users/dirk-thomas/received_events'
    type: User
    site_admin: false
  labels:
    - url: 'https://api.github.com/repos/ros/diagnostics/labels/bug'
      name: bug
      color: fc2929
  state: open
  assignee: null
  milestone: null
  comments: 0
  created_at: '2013-11-09T20:35:59Z'
  updated_at: '2013-11-09T20:35:59Z'
  closed_at: null
  pull_request:
    html_url: null
    diff_url: null
    patch_url: null
  body: "The reference to `example.cpp` is not unique since other packages which this package depends on also contain a file with that name. Therefore you need to reference the file with its relative location from the `manifest.dox` file: https://github.com/ros/diagnostics/blob/groovy-devel/diagnostic_updater/mainpage.dox#L25\r\n\r\n    Example uses of these classes can be found in \\ref src/example.cpp.\r\n\r\nBtw. the `\\ref` should not be necessary. Doxygen will consider every word containing dots as potential file references."
  repo: diagnostics
  owner: ros
  data_comments: []
- _id:
    _bsontype: ObjectID
    id: !<tag:yaml.org,2002:binary> U5cdib01QyrlAiCE
  url: 'https://api.github.com/repos/ros/pluginlib/issues/29'
  labels_url: 'https://api.github.com/repos/ros/pluginlib/issues/29/labels{/name}'
  comments_url: 'https://api.github.com/repos/ros/pluginlib/issues/29/comments'
  events_url: 'https://api.github.com/repos/ros/pluginlib/issues/29/events'
  html_url: 'https://github.com/ros/pluginlib/issues/29'
  id: 35390490
  number: 29
  title: fails to configure without gtest
  user:
    login: dirk-thomas
    id: 1335366
    avatar_url: 'https://avatars.githubusercontent.com/u/1335366?'
    gravatar_id: 00f79f6be5722ab3a1b3ece2cd32bb35
    url: 'https://api.github.com/users/dirk-thomas'
    html_url: 'https://github.com/dirk-thomas'
    followers_url: 'https://api.github.com/users/dirk-thomas/followers'
    following_url: 'https://api.github.com/users/dirk-thomas/following{/other_user}'
    gists_url: 'https://api.github.com/users/dirk-thomas/gists{/gist_id}'
    starred_url: 'https://api.github.com/users/dirk-thomas/starred{/owner}{/repo}'
    subscriptions_url: 'https://api.github.com/users/dirk-thomas/subscriptions'
    organizations_url: 'https://api.github.com/users/dirk-thomas/orgs'
    repos_url: 'https://api.github.com/users/dirk-thomas/repos'
    events_url: 'https://api.github.com/users/dirk-thomas/events{/privacy}'
    received_events_url: 'https://api.github.com/users/dirk-thomas/received_events'
    type: User
    site_admin: false
  labels:
    - url: 'https://api.github.com/repos/ros/pluginlib/labels/bug'
      name: bug
      color: fc2929
  state: open
  assignee:
    login: esteve
    id: 33620
    avatar_url: 'https://avatars.githubusercontent.com/u/33620?'
    gravatar_id: 33e7091d621f15f76e2bdf03a88552c4
    url: 'https://api.github.com/users/esteve'
    html_url: 'https://github.com/esteve'
    followers_url: 'https://api.github.com/users/esteve/followers'
    following_url: 'https://api.github.com/users/esteve/following{/other_user}'
    gists_url: 'https://api.github.com/users/esteve/gists{/gist_id}'
    starred_url: 'https://api.github.com/users/esteve/starred{/owner}{/repo}'
    subscriptions_url: 'https://api.github.com/users/esteve/subscriptions'
    organizations_url: 'https://api.github.com/users/esteve/orgs'
    repos_url: 'https://api.github.com/users/esteve/repos'
    events_url: 'https://api.github.com/users/esteve/events{/privacy}'
    received_events_url: 'https://api.github.com/users/esteve/received_events'
    type: User
    site_admin: false
  milestone: null
  comments: 1
  created_at: '2014-06-10T14:58:26Z'
  updated_at: '2014-06-10T14:59:04Z'
  closed_at: null
  body: "See http://answers.ros.org/question/173255/compiling-ros-to-virtual-nao/\r\nAfter calling `catkin_add_gtest` the target can only be used if it actually exists since when the user does not have gtest no target is created."
  repo: pluginlib
  owner: ros
  data_comments:
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> U5cdir01QyrlAiCG
      url: 'https://api.github.com/repos/ros/pluginlib/issues/comments/45624840'
      html_url: 'https://github.com/ros/pluginlib/issues/29#issuecomment-45624840'
      issue_url: 'https://api.github.com/repos/ros/pluginlib/issues/29'
      id: 45624840
      user:
        login: esteve
        id: 33620
        avatar_url: 'https://avatars.githubusercontent.com/u/33620?'
        gravatar_id: 33e7091d621f15f76e2bdf03a88552c4
        url: 'https://api.github.com/users/esteve'
        html_url: 'https://github.com/esteve'
        followers_url: 'https://api.github.com/users/esteve/followers'
        following_url: 'https://api.github.com/users/esteve/following{/other_user}'
        gists_url: 'https://api.github.com/users/esteve/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/esteve/starred{/owner}{/repo}'
        subscriptions_url: 'https://api.github.com/users/esteve/subscriptions'
        organizations_url: 'https://api.github.com/users/esteve/orgs'
        repos_url: 'https://api.github.com/users/esteve/repos'
        events_url: 'https://api.github.com/users/esteve/events{/privacy}'
        received_events_url: 'https://api.github.com/users/esteve/received_events'
        type: User
        site_admin: false
      created_at: '2014-06-10T14:59:04Z'
      updated_at: '2014-06-10T14:59:04Z'
      body: Thanks!
      owner: ros
      repo: pluginlib
      issue_id: 29
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> U5cjb701Qyq7AkAW
      url: 'https://api.github.com/repos/ros/pluginlib/issues/comments/45628360'
      html_url: 'https://github.com/ros/pluginlib/issues/29#issuecomment-45628360'
      issue_url: 'https://api.github.com/repos/ros/pluginlib/issues/29'
      id: 45628360
      user:
        login: esteve
        id: 33620
        avatar_url: 'https://avatars.githubusercontent.com/u/33620?'
        gravatar_id: 33e7091d621f15f76e2bdf03a88552c4
        url: 'https://api.github.com/users/esteve'
        html_url: 'https://github.com/esteve'
        followers_url: 'https://api.github.com/users/esteve/followers'
        following_url: 'https://api.github.com/users/esteve/following{/other_user}'
        gists_url: 'https://api.github.com/users/esteve/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/esteve/starred{/owner}{/repo}'
        subscriptions_url: 'https://api.github.com/users/esteve/subscriptions'
        organizations_url: 'https://api.github.com/users/esteve/orgs'
        repos_url: 'https://api.github.com/users/esteve/repos'
        events_url: 'https://api.github.com/users/esteve/events{/privacy}'
        received_events_url: 'https://api.github.com/users/esteve/received_events'
        type: User
        site_admin: false
      created_at: '2014-06-10T15:22:12Z'
      updated_at: '2014-06-10T15:22:12Z'
      body: 'That''s weird, gtest is both a build and run-time dependency for catkin'
      repo: pluginlib
      owner: ros
      issue_id: 29
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> U5c0sL01QymiAi93
      url: 'https://api.github.com/repos/ros/pluginlib/issues/comments/45638884'
      html_url: 'https://github.com/ros/pluginlib/issues/29#issuecomment-45638884'
      issue_url: 'https://api.github.com/repos/ros/pluginlib/issues/29'
      id: 45638884
      user:
        login: dirk-thomas
        id: 1335366
        avatar_url: 'https://avatars.githubusercontent.com/u/1335366?'
        gravatar_id: 00f79f6be5722ab3a1b3ece2cd32bb35
        url: 'https://api.github.com/users/dirk-thomas'
        html_url: 'https://github.com/dirk-thomas'
        followers_url: 'https://api.github.com/users/dirk-thomas/followers'
        following_url: 'https://api.github.com/users/dirk-thomas/following{/other_user}'
        gists_url: 'https://api.github.com/users/dirk-thomas/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/dirk-thomas/starred{/owner}{/repo}'
        subscriptions_url: 'https://api.github.com/users/dirk-thomas/subscriptions'
        organizations_url: 'https://api.github.com/users/dirk-thomas/orgs'
        repos_url: 'https://api.github.com/users/dirk-thomas/repos'
        events_url: 'https://api.github.com/users/dirk-thomas/events{/privacy}'
        received_events_url: 'https://api.github.com/users/dirk-thomas/received_events'
        type: User
        site_admin: false
      created_at: '2014-06-10T16:39:09Z'
      updated_at: '2014-06-10T16:39:09Z'
      body: "There are numerous reasons why this can be the case:\r\n* gtest removed after catkin pcakage was installed\r\n* gtest not installed in the first place (on platforms different then Debian)\r\n* ...\r\n\r\nSo the CMake code should handle this more graceful."
      repo: pluginlib
      owner: ros
      issue_id: 29
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> U5c1W701QyqFAizY
      url: 'https://api.github.com/repos/ros/pluginlib/issues/comments/45639266'
      html_url: 'https://github.com/ros/pluginlib/issues/29#issuecomment-45639266'
      issue_url: 'https://api.github.com/repos/ros/pluginlib/issues/29'
      id: 45639266
      user:
        login: vrabaud
        id: 700766
        avatar_url: 'https://avatars.githubusercontent.com/u/700766?'
        gravatar_id: cc30ac48a693633fa4d05d66238eaff8
        url: 'https://api.github.com/users/vrabaud'
        html_url: 'https://github.com/vrabaud'
        followers_url: 'https://api.github.com/users/vrabaud/followers'
        following_url: 'https://api.github.com/users/vrabaud/following{/other_user}'
        gists_url: 'https://api.github.com/users/vrabaud/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/vrabaud/starred{/owner}{/repo}'
        subscriptions_url: 'https://api.github.com/users/vrabaud/subscriptions'
        organizations_url: 'https://api.github.com/users/vrabaud/orgs'
        repos_url: 'https://api.github.com/users/vrabaud/repos'
        events_url: 'https://api.github.com/users/vrabaud/events{/privacy}'
        received_events_url: 'https://api.github.com/users/vrabaud/received_events'
        type: User
        site_admin: false
      created_at: '2014-06-10T16:41:57Z'
      updated_at: '2014-06-10T16:41:57Z'
      body: >-
        the weird thing is those instructions worked for us: really, maybe gtest
        is not part of that VM
      repo: pluginlib
      owner: ros
      issue_id: 29
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> U5gvAL01QyoUArMe
      url: 'https://api.github.com/repos/ros/pluginlib/issues/comments/45725039'
      html_url: 'https://github.com/ros/pluginlib/issues/29#issuecomment-45725039'
      issue_url: 'https://api.github.com/repos/ros/pluginlib/issues/29'
      id: 45725039
      user:
        login: vrabaud
        id: 700766
        avatar_url: 'https://avatars.githubusercontent.com/u/700766?'
        gravatar_id: cc30ac48a693633fa4d05d66238eaff8
        url: 'https://api.github.com/users/vrabaud'
        html_url: 'https://github.com/vrabaud'
        followers_url: 'https://api.github.com/users/vrabaud/followers'
        following_url: 'https://api.github.com/users/vrabaud/following{/other_user}'
        gists_url: 'https://api.github.com/users/vrabaud/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/vrabaud/starred{/owner}{/repo}'
        subscriptions_url: 'https://api.github.com/users/vrabaud/subscriptions'
        organizations_url: 'https://api.github.com/users/vrabaud/orgs'
        repos_url: 'https://api.github.com/users/vrabaud/repos'
        events_url: 'https://api.github.com/users/vrabaud/events{/privacy}'
        received_events_url: 'https://api.github.com/users/vrabaud/received_events'
        type: User
        site_admin: false
      created_at: '2014-06-11T10:27:11Z'
      updated_at: '2014-06-11T10:27:11Z'
      body: >-
        According to the question, gtest was simply not installed. Not sure if
        you want to close that bug.
      repo: pluginlib
      owner: ros
      issue_id: 29
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> U5g5ar01QyoUArWM
      url: 'https://api.github.com/repos/ros/pluginlib/issues/comments/45728358'
      html_url: 'https://github.com/ros/pluginlib/issues/29#issuecomment-45728358'
      issue_url: 'https://api.github.com/repos/ros/pluginlib/issues/29'
      id: 45728358
      user:
        login: esteve
        id: 33620
        avatar_url: 'https://avatars.githubusercontent.com/u/33620?'
        gravatar_id: 33e7091d621f15f76e2bdf03a88552c4
        url: 'https://api.github.com/users/esteve'
        html_url: 'https://github.com/esteve'
        followers_url: 'https://api.github.com/users/esteve/followers'
        following_url: 'https://api.github.com/users/esteve/following{/other_user}'
        gists_url: 'https://api.github.com/users/esteve/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/esteve/starred{/owner}{/repo}'
        subscriptions_url: 'https://api.github.com/users/esteve/subscriptions'
        organizations_url: 'https://api.github.com/users/esteve/orgs'
        repos_url: 'https://api.github.com/users/esteve/repos'
        events_url: 'https://api.github.com/users/esteve/events{/privacy}'
        received_events_url: 'https://api.github.com/users/esteve/received_events'
        type: User
        site_admin: false
      created_at: '2014-06-11T11:11:37Z'
      updated_at: '2014-06-11T11:11:37Z'
      body: >-
        I've been trying to get ROS installed onto the OpenNAO VM. I updated the
        wiki with some fixes, but I couldn't get past the rosdep step. Are there
        any more up to date instructions somewhere? In any case, I'm going add a
        check for gtest in CMakeLists.txt and skip the test if it's missing, and
        close this ticket.
      repo: pluginlib
      owner: ros
      issue_id: 29
- _id:
    _bsontype: ObjectID
    id: !<tag:yaml.org,2002:binary> UQxpO701Q9ZVAAL4
  updated_at: '2013-01-31T19:13:32Z'
  assignee: null
  url: 'https://api.github.com/repos/ros/ros_comm/issues/149'
  comments: 15
  html_url: 'https://github.com/ros/ros_comm/issues/149'
  comments_url: 'https://api.github.com/repos/ros/ros_comm/issues/149/comments'
  user:
    type: User
    received_events_url: 'https://api.github.com/users/tfoote/received_events'
    url: 'https://api.github.com/users/tfoote'
    avatar_url: >-
      https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
    organizations_url: 'https://api.github.com/users/tfoote/orgs'
    gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
    starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
    gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
    repos_url: 'https://api.github.com/users/tfoote/repos'
    followers_url: 'https://api.github.com/users/tfoote/followers'
    subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
    following_url: 'https://api.github.com/users/tfoote/following'
    events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
    id: 447804
    login: tfoote
  created_at: '2013-01-31T19:13:20Z'
  labels_url: 'https://api.github.com/repos/ros/ros_comm/issues/149/labels{/name}'
  body: "I am using this call method from a ServiceClient:\r\n{{{\r\n  template<class MReq, class MRes>\r\n  bool call(MReq& req, MRes& res)\r\n}}}\r\n\r\ntracing the execution, this goes into service_server_link.cpp\r\n{{{\r\nbool ServiceServerLink::call(const SerializedMessage& req, SerializedMessage& resp)\r\n}}}\r\n\r\nthe problem seems to be that the finished_condition_.wait() call here never terminates.\r\n\r\n{{{\r\n    boost::mutex::scoped_lock lock(info->finished_mutex_);\r\n\r\n    while (!info->finished_)\r\n    {\r\n      info->finished_condition_.wait(lock);\r\n    }\r\n\r\n}}}\r\n\r\nusing:\r\nhttps://code.ros.org/svn/ros/stacks/ros/tags/latest/core/roscpp\r\nr9871\r\n\r\nThis happens almost every time.\r\nI believe my setup had incorrect MD5 sums (however, no error or warning mentioned this). At some point, the node providing the service crashed (potentially caused by the MD5 sum error). I kept this setup until I found the hanging call to the condition. Doing rosmake in my build fixed all the problems.\r\n\r\nRegardless of the potential issues with the build I used and the service provider node, I believe there should have been warnings about the MD5 sum being different and the code should not hang.\n\ntrac data:\n * Owner: **dthomas**\n * Reporter: **isucan**\n * Reported at: **Thu May 27 10:08:33 2010**\n * URL: https://code.ros.org/trac/ros/ticket/2742"
  pull_request:
    html_url: null
    diff_url: null
    patch_url: null
  milestone: null
  closed_at: null
  state: open
  labels:
    - url: 'https://api.github.com/repos/ros/ros_comm/labels/bug'
      color: fc2929
      name: bug
    - url: 'https://api.github.com/repos/ros/ros_comm/labels/critical'
      color: ededed
      name: critical
  title: 'roscpp: ros::service::call hangs  (ros ticket #2742)'
  number: 149
  id: 10513271
  events_url: 'https://api.github.com/repos/ros/ros_comm/issues/149/events'
  repo: ros_comm
  owner: ros
  data_comments:
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMZ
      updated_at: '2013-01-31T19:13:20Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960111'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:20Z'
      body: "[isucan] Actually, I'm getting the error once in a while even after the rebuild -- so no MD5 sum errors and no crashed nodes.\r\n\r\nAlso, running with valgrind, I get this:\r\n\r\n{{{\r\n==21823== Invalid read of size 8\r\n==21823==    at 0x8468CFC: ros::ServiceServerLink::onResponse(boost::shared_ptr<ros::Connection> const&, boost::shared_array<unsigned char> const&, unsigned int, bool) (shared_count.hpp:250)\r\n==21823==    by 0x83E556F: ros::Connection::readTransport() (function_template.hpp:1013)\r\n==21823==    by 0x83E70AD: ros::Connection::onReadable(boost::shared_ptr<ros::Transport> const&) (connection.cpp:104)\r\n==21823==    by 0x83F3E67: boost::function1<void, boost::shared_ptr<ros::Transport> const&>::operator()(boost::shared_ptr<ros::Transport> const&) const (function_template.hpp:1013)\r\n==21823==    by 0x83F2E69: ros::TransportTCP::socketUpdate(int) (transport_tcp.cpp:555)\r\n==21823==    by 0x83DCBBA: ros::PollSet::update(int) (function_template.hpp:1013)\r\n==21823==    by 0x841F014: ros::PollManager::threadFunc() (poll_manager.cpp:95)\r\n==21823==    by 0x8D37DAF: thread_proxy (in /usr/lib/libboost_thread.so.1.40.0)\r\n==21823==    by 0xA418A03: start_thread (pthread_create.c:300)\r\n==21823==    by 0xA70DD4C: clone (clone.S:112)\r\n==21823==  Address 0x16473518 is not stack'd, malloc'd or (recently) free'd\r\n==21823== \r\n==21823== Invalid write of size 8\r\n==21823==    at 0x8468D00: ros::ServiceServerLink::onResponse(boost::shared_ptr<ros::Connection> const&, boost::shared_array<unsigned char> const&, unsigned int, bool) (shared_array.hpp:47)\r\n==21823==    by 0x83E556F: ros::Connection::readTransport() (function_template.hpp:1013)\r\n==21823==    by 0x83E70AD: ros::Connection::onReadable(boost::shared_ptr<ros::Transport> const&) (connection.cpp:104)\r\n==21823==    by 0x83F3E67: boost::function1<void, boost::shared_ptr<ros::Transport> const&>::operator()(boost::shared_ptr<ros::Transport> const&) const (function_template.hpp:1013)\r\n==21823==    by 0x83F2E69: ros::TransportTCP::socketUpdate(int) (transport_tcp.cpp:555)\r\n==21823==    by 0x83DCBBA: ros::PollSet::update(int) (function_template.hpp:1013)\r\n==21823==    by 0x841F014: ros::PollManager::threadFunc() (poll_manager.cpp:95)\r\n==21823==    by 0x8D37DAF: thread_proxy (in /usr/lib/libboost_thread.so.1.40.0)\r\n==21823==    by 0xA418A03: start_thread (pthread_create.c:300)\r\n==21823==    by 0xA70DD4C: clone (clone.S:112)\r\n==21823==  Address 0x16473510 is not stack'd, malloc'd or (recently) free'd\r\n==21823== \r\n==21823== Invalid read of size 8\r\n==21823==    at 0x8468D19: ros::ServiceServerLink::onResponse(boost::shared_ptr<ros::Connection> const&, boost::shared_array<unsigned char> const&, unsigned int, bool) (sp_counted_base_gcc_x86.hpp:66)\r\n==21823==    by 0x83E556F: ros::Connection::readTransport() (function_template.hpp:1013)\r\n==21823==    by 0x83E70AD: ros::Connection::onReadable(boost::shared_ptr<ros::Transport> const&) (connection.cpp:104)\r\n==21823==    by 0x83F3E67: boost::function1<void, boost::shared_ptr<ros::Transport> const&>::operator()(boost::shared_ptr<ros::Transport> const&) const (function_template.hpp:1013)\r\n==21823==    by 0x83F2E69: ros::TransportTCP::socketUpdate(int) (transport_tcp.cpp:555)\r\n==21823==    by 0x83DCBBA: ros::PollSet::update(int) (function_template.hpp:1013)\r\n==21823==    by 0x841F014: ros::PollManager::threadFunc() (poll_manager.cpp:95)\r\n==21823==    by 0x8D37DAF: thread_proxy (in /usr/lib/libboost_thread.so.1.40.0)\r\n==21823==    by 0xA418A03: start_thread (pthread_create.c:300)\r\n==21823==    by 0xA70DD4C: clone (clone.S:112)\r\n==21823==  Address 0x16473518 is not stack'd, malloc'd or (recently) free'd\r\n==21823== \r\n==21823== Invalid read of size 4\r\n==21823==    at 0x45B3F7: boost::detail::atomic_exchange_and_add(int*, int) (sp_counted_base_gcc_x86.hpp:50)\r\n==21823==    by 0x45B538: boost::detail::sp_counted_base::release() (sp_counted_base_gcc_x86.hpp:143)\r\n==21823==    by 0x8468D26: ros::ServiceServerLink::onResponse(boost::shared_ptr<ros::Connection> const&, boost::shared_array<unsigned char> const&, unsigned int, bool) (shared_count.hpp:253)\r\n==21823==    by 0x83E556F: ros::Connection::readTransport() (function_template.hpp:1013)\r\n==21823==    by 0x83E70AD: ros::Connection::onReadable(boost::shared_ptr<ros::Transport> const&) (connection.cpp:104)\r\n==21823==    by 0x83F3E67: boost::function1<void, boost::shared_ptr<ros::Transport> const&>::operator()(boost::shared_ptr<ros::Transport> const&) const (function_template.hpp:1013)\r\n==21823==    by 0x83F2E69: ros::TransportTCP::socketUpdate(int) (transport_tcp.cpp:555)\r\n==21823==    by 0x83DCBBA: ros::PollSet::update(int) (function_template.hpp:1013)\r\n==21823==    by 0x841F014: ros::PollManager::threadFunc() (poll_manager.cpp:95)\r\n==21823==    by 0x8D37DAF: thread_proxy (in /usr/lib/libboost_thread.so.1.40.0)\r\n==21823==    by 0xA418A03: start_thread (pthread_create.c:300)\r\n==21823==    by 0xA70DD4C: clone (clone.S:112)\r\n==21823==  Address 0x16473610 is not stack'd, malloc'd or (recently) free'd\r\n==21823== \r\n==21823== Invalid write of size 8\r\n==21823==    at 0x8468D27: ros::ServiceServerLink::onResponse(boost::shared_ptr<ros::Connection> const&, boost::shared_array<unsigned char> const&, unsigned int, bool) (shared_count.hpp:254)\r\n==21823==    by 0x83E556F: ros::Connection::readTransport() (function_template.hpp:1013)\r\n==21823==    by 0x83E70AD: ros::Connection::onReadable(boost::shared_ptr<ros::Transport> const&) (connection.cpp:104)\r\n==21823==    by 0x83F3E67: boost::function1<void, boost::shared_ptr<ros::Transport> const&>::operator()(boost::shared_ptr<ros::Transport> const&) const (function_template.hpp:1013)\r\n==21823==    by 0x83F2E69: ros::TransportTCP::socketUpdate(int) (transport_tcp.cpp:555)\r\n==21823==    by 0x83DCBBA: ros::PollSet::update(int) (function_template.hpp:1013)\r\n==21823==    by 0x841F014: ros::PollManager::threadFunc() (poll_manager.cpp:95)\r\n==21823==    by 0x8D37DAF: thread_proxy (in /usr/lib/libboost_thread.so.1.40.0)\r\n==21823==    by 0xA418A03: start_thread (pthread_create.c:300)\r\n==21823==    by 0xA70DD4C: clone (clone.S:112)\r\n==21823==  Address 0x16473518 is not stack'd, malloc'd or (recently) free'd\r\n==21823== \r\n==21823== Invalid write of size 8\r\n==21823==    at 0x8468D30: ros::ServiceServerLink::onResponse(boost::shared_ptr<ros::Connection> const&, boost::shared_array<unsigned char> const&, unsigned int, bool) (serialized_message.h:40)\r\n==21823==    by 0x83E556F: ros::Connection::readTransport() (function_template.hpp:1013)\r\n==21823==    by 0x83E70AD: ros::Connection::onReadable(boost::shared_ptr<ros::Transport> const&) (connection.cpp:104)\r\n==21823==    by 0x83F3E67: boost::function1<void, boost::shared_ptr<ros::Transport> const&>::operator()(boost::shared_ptr<ros::Transport> const&) const (function_template.hpp:1013)\r\n==21823==    by 0x83F2E69: ros::TransportTCP::socketUpdate(int) (transport_tcp.cpp:555)\r\n==21823==    by 0x83DCBBA: ros::PollSet::update(int) (function_template.hpp:1013)\r\n==21823==    by 0x841F014: ros::PollManager::threadFunc() (poll_manager.cpp:95)\r\n==21823==    by 0x8D37DAF: thread_proxy (in /usr/lib/libboost_thread.so.1.40.0)\r\n==21823==    by 0xA418A03: start_thread (pthread_create.c:300)\r\n==21823==    by 0xA70DD4C: clone (clone.S:112)\r\n==21823==  Address 0x16473520 is not stack'd, malloc'd or (recently) free'd\r\n==21823== \r\n==21823== Invalid write of size 8\r\n==21823==    at 0x8468D39: ros::ServiceServerLink::onResponse(boost::shared_ptr<ros::Connection> const&, boost::shared_array<unsigned char> const&, unsigned int, bool) (serialized_message.h:40)\r\n==21823==    by 0x83E556F: ros::Connection::readTransport() (function_template.hpp:1013)\r\n==21823==    by 0x83E70AD: ros::Connection::onReadable(boost::shared_ptr<ros::Transport> const&) (connection.cpp:104)\r\n==21823==    by 0x83F3E67: boost::function1<void, boost::shared_ptr<ros::Transport> const&>::operator()(boost::shared_ptr<ros::Transport> const&) const (function_template.hpp:1013)\r\n==21823==    by 0x83F2E69: ros::TransportTCP::socketUpdate(int) (transport_tcp.cpp:555)\r\n==21823==    by 0x83DCBBA: ros::PollSet::update(int) (function_template.hpp:1013)\r\n==21823==    by 0x841F014: ros::PollManager::threadFunc() (poll_manager.cpp:95)\r\n==21823==    by 0x8D37DAF: thread_proxy (in /usr/lib/libboost_thread.so.1.40.0)\r\n==21823==    by 0xA418A03: start_thread (pthread_create.c:300)\r\n==21823==    by 0xA70DD4C: clone (clone.S:112)\r\n==21823==  Address 0x16473528 is not stack'd, malloc'd or (recently) free'd\r\n==21823== \r\n==21823== Invalid read of size 8\r\n==21823==    at 0x8468D50: ros::ServiceServerLink::onResponse(boost::shared_ptr<ros::Connection> const&, boost::shared_array<unsigned char> const&, unsigned int, bool) (shared_count.hpp:262)\r\n==21823==    by 0x83E556F: ros::Connection::readTransport() (function_template.hpp:1013)\r\n==21823==    by 0x83E70AD: ros::Connection::onReadable(boost::shared_ptr<ros::Transport> const&) (connection.cpp:104)\r\n==21823==    by 0x83F3E67: boost::function1<void, boost::shared_ptr<ros::Transport> const&>::operator()(boost::shared_ptr<ros::Transport> const&) const (function_template.hpp:1013)\r\n==21823==    by 0x83F2E69: ros::TransportTCP::socketUpdate(int) (transport_tcp.cpp:555)\r\n==21823==    by 0x83DCBBA: ros::PollSet::update(int) (function_template.hpp:1013)\r\n==21823==    by 0x841F014: ros::PollManager::threadFunc() (poll_manager.cpp:95)\r\n==21823==    by 0x8D37DAF: thread_proxy (in /usr/lib/libboost_thread.so.1.40.0)\r\n==21823==    by 0xA418A03: start_thread (pthread_create.c:300)\r\n==21823==    by 0xA70DD4C: clone (clone.S:112)\r\n==21823==  Address 0x16473538 is not stack'd, malloc'd or (recently) free'd\r\n==21823== \r\n==21823== Invalid write of size 8\r\n==21823==    at 0x8468D54: ros::ServiceServerLink::onResponse(boost::shared_ptr<ros::Connection> const&, boost::shared_array<unsigned char> const&, unsigned int, bool) (move.h:83)\r\n==21823==    by 0x83E556F: ros::Connection::readTransport() (function_template.hpp:1013)\r\n==21823==    by 0x83E70AD: ros::Connection::onReadable(boost::shared_ptr<ros::Transport> const&) (connection.cpp:104)\r\n==21823==    by 0x83F3E67: boost::function1<void, boost::shared_ptr<ros::Transport> const&>::operator()(boost::shared_ptr<ros::Transport> const&) const (function_template.hpp:1013)\r\n==21823==    by 0x83F2E69: ros::TransportTCP::socketUpdate(int) (transport_tcp.cpp:555)\r\n==21823==    by 0x83DCBBA: ros::PollSet::update(int) (function_template.hpp:1013)\r\n==21823==    by 0x841F014: ros::PollManager::threadFunc() (poll_manager.cpp:95)\r\n==21823==    by 0x8D37DAF: thread_proxy (in /usr/lib/libboost_thread.so.1.40.0)\r\n==21823==    by 0xA418A03: start_thread (pthread_create.c:300)\r\n==21823==    by 0xA70DD4C: clone (clone.S:112)\r\n==21823==  Address 0x16473530 is not stack'd, malloc'd or (recently) free'd\r\n==21823== \r\n==21823== Invalid write of size 8\r\n==21823==    at 0x8468D58: ros::ServiceServerLink::onResponse(boost::shared_ptr<ros::Connection> const&, boost::shared_array<unsigned char> const&, unsigned int, bool) (shared_count.hpp:263)\r\n==21823==    by 0x83E556F: ros::Connection::readTransport() (function_template.hpp:1013)\r\n==21823==    by 0x83E70AD: ros::Connection::onReadable(boost::shared_ptr<ros::Transport> const&) (connection.cpp:104)\r\n==21823==    by 0x83F3E67: boost::function1<void, boost::shared_ptr<ros::Transport> const&>::operator()(boost::shared_ptr<ros::Transport> const&) const (function_template.hpp:1013)\r\n==21823==    by 0x83F2E69: ros::TransportTCP::socketUpdate(int) (transport_tcp.cpp:555)\r\n==21823==    by 0x83DCBBA: ros::PollSet::update(int) (function_template.hpp:1013)\r\n==21823==    by 0x841F014: ros::PollManager::threadFunc() (poll_manager.cpp:95)\r\n==21823==    by 0x8D37DAF: thread_proxy (in /usr/lib/libboost_thread.so.1.40.0)\r\n==21823==    by 0xA418A03: start_thread (pthread_create.c:300)\r\n==21823==    by 0xA70DD4C: clone (clone.S:112)\r\n==21823==  Address 0x16473538 is not stack'd, malloc'd or (recently) free'd\r\n==21823== \r\n==21823== Invalid write of size 8\r\n==21823==    at 0x8468D6B: ros::ServiceServerLink::onResponse(boost::shared_ptr<ros::Connection> const&, boost::shared_array<unsigned char> const&, unsigned int, bool) (serialized_message.h:40)\r\n==21823==    by 0x83E556F: ros::Connection::readTransport() (function_template.hpp:1013)\r\n==21823==    by 0x83E70AD: ros::Connection::onReadable(boost::shared_ptr<ros::Transport> const&) (connection.cpp:104)\r\n==21823==    by 0x83F3E67: boost::function1<void, boost::shared_ptr<ros::Transport> const&>::operator()(boost::shared_ptr<ros::Transport> const&) const (function_template.hpp:1013)\r\n==21823==    by 0x83F2E69: ros::TransportTCP::socketUpdate(int) (transport_tcp.cpp:555)\r\n==21823==    by 0x83DCBBA: ros::PollSet::update(int) (function_template.hpp:1013)\r\n==21823==    by 0x841F014: ros::PollManager::threadFunc() (poll_manager.cpp:95)\r\n==21823==    by 0x8D37DAF: thread_proxy (in /usr/lib/libboost_thread.so.1.40.0)\r\n==21823==    by 0xA418A03: start_thread (pthread_create.c:300)\r\n==21823==    by 0xA70DD4C: clone (clone.S:112)\r\n==21823==  Address 0x16473540 is not stack'd, malloc'd or (recently) free'd\r\n}}}"
      id: 12960111
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMa
      updated_at: '2013-01-31T19:13:22Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960115'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:22Z'
      body: '[jfaust] is there some sample code that reproduces this?'
      id: 12960115
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMb
      updated_at: '2013-01-31T19:13:22Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960116'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:22Z'
      body: "[vlopez] Apologies for reopening such an old ticket, but this issue is still happening on diamondback and cturtle.\r\n\r\nIt has also been mentioned in these other tickets: https://code.ros.org/trac/ros/ticket/2913 https://code.ros.org/trac/ros-pkg/ticket/4195\r\n\r\nThe issue is caused by a deadlock caused by a service call when pollmanager is \r\n\r\nI'm working on a code example that reproduces this issue, but it only happens when PollManager is running and I don't know what makes it start working. And there's little information about PollManager.\r\n\r\nThis is the callstack after the deadlock.\r\n\r\n\r\n{{{\r\n#0  0xb78d3430 in __kernel_vsyscall ()\r\n#1  0xb6dbfaf9 in __lll_lock_wait () from /lib/tls/i686/cmov/libpthread.so.0\r\n#2  0xb6dbb149 in _L_lock_839 () from /lib/tls/i686/cmov/libpthread.so.0\r\n#3  0xb6dbafdb in pthread_mutex_lock () from /lib/tls/i686/cmov/libpthread.so.0\r\n#4  0xb71a8dba in lock (this=<optimized out>) at /usr/include/boost/thread/pthread/recursive_mutex.hpp:67\r\n#5  lock (this=<optimized out>) at /usr/include/boost/thread/locks.hpp:338\r\n#6  unique_lock (m_=<optimized out>, this=<optimized out>) at /usr/include/boost/thread/locks.hpp:224\r\n#7  ros::TransportTCP::close (this=0xb3200fd4) at /opt/ros/cturtle/ros/core/roscpp/src/libros/transport/transport_tcp.cpp:336\r\n#8  0xb71ad463 in ros::TransportTCP::read (this=0xb3200f90, buffer=0x8732aa8 \"\\370\\003Ƕ\\220\\364s\\b\\020\", size=5)\r\n    at /opt/ros/cturtle/ros/core/roscpp/src/libros/transport/transport_tcp.cpp:406\r\n#9  0xb719cc8e in ros::Connection::readTransport (this=0xb3201598) at /opt/ros/cturtle/ros/core/roscpp/src/libros/connection.cpp:123\r\n#10 0xb719dcad in ros::Connection::read (this=0xb3201598, size=5, callback=...) at /opt/ros/cturtle/ros/core/roscpp/src/libros/connection.cpp:284\r\n#11 0xb7229112 in ros::ServiceServerLink::onRequestWritten (this=0xb3202118, conn=...) at /opt/ros/cturtle/ros/core/roscpp/src/libros/service_server_link.cpp:181\r\n#12 0xb722dd44 in operator() (a1=<optimized out>, p=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/mem_fn_template.hpp:162\r\n#13 operator()<boost::_mfi::mf1<void, ros::ServiceServerLink, const ros::ConnectionPtr&>, boost::_bi::list1<const boost::shared_ptr<ros::Connection>&> > (\r\n    a=<optimized out>, f=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/bind.hpp:306\r\n#14 operator()<boost::shared_ptr<ros::Connection> > (a1=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/bind_template.hpp:47\r\n#15 boost::detail::function::void_function_obj_invoker1<boost::_bi::bind_t<void, boost::_mfi::mf1<void, ros::ServiceServerLink, ros::ConnectionPtr const&>, boost::_bi::list2<boost::_bi::value<ros::ServiceServerLink*>, boost::arg<1> > >, void, ros::ConnectionPtr const&>::invoke (function_obj_ptr=..., a0=...)\r\n    at /usr/include/boost/function/function_template.hpp:153\r\n#16 0xb719febd in operator() (a0=<optimized out>, this=<optimized out>) at /usr/include/boost/function/function_template.hpp:1013\r\n#17 ros::Connection::writeTransport (this=0xb3201598) at /opt/ros/cturtle/ros/core/roscpp/src/libros/connection.cpp:240\r\n#18 0xb71a07e2 in ros::Connection::write (this=0xb3201598, buffer=..., size=4, callback=..., immediate=true)\r\n    at /opt/ros/cturtle/ros/core/roscpp/src/libros/connection.cpp:311\r\n#19 0xb722b864 in ros::ServiceServerLink::processNextCall (this=0xb3202118) at /opt/ros/cturtle/ros/core/roscpp/src/libros/service_server_link.cpp:312\r\n#20 0xb722c207 in ros::ServiceServerLink::call (this=0xb3202118, req=..., resp=...) at /opt/ros/cturtle/ros/core/roscpp/src/libros/service_server_link.cpp:348\r\n#21 0xb724d03e in ros::ServiceClient::call (this=0xb3200524, req=..., resp=..., service_md5sum=...)\r\n    at /opt/ros/cturtle/ros/core/roscpp/src/libros/service_client.cpp:144\r\n#22 0x0812d876 in ros::ServiceClient::call<std_srvs::EmptyRequest, std_srvs::EmptyResponse> (this=0xb3200524, req=..., resp=..., service_md5sum=...)\r\n    at /opt/ros/cturtle/ros/core/roscpp/include/ros/service_client.h:102\r\n#23 0x0812ce09 in ros::ServiceClient::call<std_srvs::Empty> (this=0xb3200524, service=...) at /opt/ros/cturtle/ros/core/roscpp/include/ros/service_client.h:90\r\n}}}\r\n\r\n{{{\r\n#0  0xb78d3430 in __kernel_vsyscall ()\r\n#1  0xb6bbd0cc in sched_yield () from /lib/tls/i686/cmov/libc.so.6\r\n#2  0xb76a6f47 in boost::this_thread::yield() () from /usr/lib/libboost_thread.so.1.40.0\r\n#3  0xb722a095 in ros::ServiceServerLink::cancelCall (this=0xb3202118, info=...) at /opt/ros/cturtle/ros/core/roscpp/src/libros/service_server_link.cpp:83\r\n#4  0xb722a246 in ros::ServiceServerLink::clearCalls (this=0xb3202118) at /opt/ros/cturtle/ros/core/roscpp/src/libros/service_server_link.cpp:99\r\n#5  0xb722a5c1 in ros::ServiceServerLink::onConnectionDropped (this=0xb3202118, conn=...) at /opt/ros/cturtle/ros/core/roscpp/src/libros/service_server_link.cpp:173\r\n#6  0xb722dcb4 in operator() (a1=<optimized out>, p=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/mem_fn_template.hpp:162\r\n#7  operator()<boost::_mfi::mf1<void, ros::ServiceServerLink, const ros::ConnectionPtr&>, boost::_bi::list2<const boost::shared_ptr<ros::Connection>&, ros::Connection::DropReason&> > (a=<optimized out>, f=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/bind.hpp:306\r\n#8  operator()<boost::shared_ptr<ros::Connection>, ros::Connection::DropReason> (a2=<optimized out>, a1=<optimized out>, this=<optimized out>)\r\n    at /usr/include/boost/bind/bind_template.hpp:76\r\n#9  boost::detail::function::void_function_obj_invoker2<boost::_bi::bind_t<void, boost::_mfi::mf1<void, ros::ServiceServerLink, ros::ConnectionPtr const&>, boost::_bi::list2<boost::_bi::value<ros::ServiceServerLink*>, boost::arg<1> > >, void, ros::ConnectionPtr const&, ros::Connection::DropReason>::invoke (function_obj_ptr=..., \r\n    a0=..., a1=ros::Connection::TransportDisconnect) at /usr/include/boost/function/function_template.hpp:153\r\n#10 0xb71a548e in boost::signal2<void, boost::shared_ptr<ros::Connection> const&, ros::Connection::DropReason, boost::last_value<void>, int, std::less<int>, boost::function<void (boost::shared_ptr<ros::Connection> const&, ros::Connection::DropReason)> >::operator()(boost::shared_ptr<ros::Connection> const&, ros::Connection::DropReason) () from /opt/ros/cturtle/ros/core/roscpp/lib/libros.so\r\n#11 0xb719e41f in ros::Connection::drop (this=0xb3201598, reason=ros::Connection::TransportDisconnect)\r\n    at /opt/ros/cturtle/ros/core/roscpp/src/libros/connection.cpp:332\r\n#12 0xb719ec66 in ros::Connection::onDisconnect (this=0xb3201598, transport=...) at /opt/ros/cturtle/ros/core/roscpp/src/libros/connection.cpp:319\r\n#13 0xb71a2e54 in operator() (a1=<optimized out>, p=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/mem_fn_template.hpp:162\r\n#14 operator()<boost::_mfi::mf1<void, ros::Connection, const ros::TransportPtr&>, boost::_bi::list1<const boost::shared_ptr<ros::Transport>&> > (a=<optimized out>, \r\n    f=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/bind.hpp:306\r\n#15 operator()<boost::shared_ptr<ros::Transport> > (a1=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/bind_template.hpp:47\r\n#16 boost::detail::function::void_function_obj_invoker1<boost::_bi::bind_t<void, boost::_mfi::mf1<void, ros::Connection, ros::TransportPtr const&>, boost::_bi::list2<boost::_bi::value<ros::Connection*>, boost::arg<1> > >, void, ros::TransportPtr const&>::invoke (function_obj_ptr=..., a0=...)\r\n    at /usr/include/boost/function/function_template.hpp:153\r\n#17 0xb71a9223 in operator() (a0=..., this=<optimized out>) at /usr/include/boost/function/function_template.hpp:1013\r\n#18 ros::TransportTCP::close (this=0xb3200f90) at /opt/ros/cturtle/ros/core/roscpp/src/libros/transport/transport_tcp.cpp:373\r\n#19 0xb71abded in ros::TransportTCP::socketUpdate (this=0xb3200f90, events=<optimized out>)\r\n    at /opt/ros/cturtle/ros/core/roscpp/src/libros/transport/transport_tcp.cpp:614\r\n#20 0xb71adb24 in operator() (p=<optimized out>, this=<optimized out>, a1=<optimized out>) at /usr/include/boost/bind/mem_fn_template.hpp:162\r\n#21 operator()<boost::_mfi::mf1<void, ros::TransportTCP, int>, boost::_bi::list1<int&> > (a=<optimized out>, f=<optimized out>, this=<optimized out>)\r\n    at /usr/include/boost/bind/bind.hpp:306\r\n#22 operator()<int> (a1=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/bind_template.hpp:32\r\n#23 boost::detail::function::void_function_obj_invoker1<boost::_bi::bind_t<void, boost::_mfi::mf1<void, ros::TransportTCP, int>, boost::_bi::list2<boost::_bi::value<ros::TransportTCP*>, boost::arg<1> > >, void, int>::invoke (function_obj_ptr=..., a0=25) at /usr/include/boost/function/function_template.hpp:153\r\n---Type <return> to continue, or q <return> to quit---\r\n#24 0xb7197adf in operator() (a0=<optimized out>, this=<optimized out>) at /usr/include/boost/function/function_template.hpp:1013\r\n#25 ros::PollSet::update (this=0x872c008, poll_timeout=10) at /opt/ros/cturtle/ros/core/roscpp/src/libros/poll_set.cpp:267\r\n#26 0xb71dd283 in ros::PollManager::threadFunc (this=0x872c008) at /opt/ros/cturtle/ros/core/roscpp/src/libros/poll_manager.cpp:95\r\n#27 0xb71de777 in operator() (p=<optimized out>, this=<optimized out>) at /usr/include/boost/bind/mem_fn_template.hpp:49\r\n#28 operator()<boost::_mfi::mf0<void, ros::PollManager>, boost::_bi::list0> (a=<optimized out>, f=<optimized out>, this=<optimized out>)\r\n    at /usr/include/boost/bind/bind.hpp:246\r\n#29 operator() (this=<optimized out>) at /usr/include/boost/bind/bind_template.hpp:20\r\n#30 boost::detail::thread_data<boost::_bi::bind_t<void, boost::_mfi::mf0<void, ros::PollManager>, boost::_bi::list1<boost::_bi::value<ros::PollManager*> > > >::run (\r\n    this=0x872ddf0) at /usr/include/boost/thread/detail/thread.hpp:56\r\n#31 0xb76a77c5 in thread_proxy () from /usr/lib/libboost_thread.so.1.40.0\r\n#32 0xb6db896e in start_thread () from /lib/tls/i686/cmov/libpthread.so.0\r\n#33 0xb6be6a4e in clone () from /lib/tls/i686/cmov/libc.so.6\r\n}}}"
      id: 12960116
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMc
      updated_at: '2013-01-31T19:13:25Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960121'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:25Z'
      body: "[kwc] Please at least provide:\r\n\r\n * some set of instructions that leads to this condition\r\n * an example in Diamondback, not C Turtle, and include the version number (rosversion ros_comm)"
      id: 12960121
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMd
      updated_at: '2013-01-31T19:13:25Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960122'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:25Z'
      body: "[vlopez] I've added the test file.\r\n\r\nAs you can see the issue happens sometimes after the following steps:\r\n1. Create a service server.\r\n2. Create a persistent connection to this service and call it\r\n3. Shutdown the server\r\n4. Create another service server in the same node, with the same name and to the same function.\r\n5. Call the service with the persistent client we had created before.\r\n\r\nI understand that this behaviour is not typical, and you might expect it to fail. That's why I check if the client is valid and if the service exists.\r\n\r\nThe real issue is the deadlock."
      id: 12960122
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMe
      updated_at: '2013-01-31T19:13:26Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960124'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:26Z'
      body: >-
        [straszheim] Thanks for the great test case.  Should be fixed in r15057,
        will watch hudson for a bit to see how things go.
      id: 12960124
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMf
      updated_at: '2013-01-31T19:13:27Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960125'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:27Z'
      body: >-
        [straszheim] Was a little overly agressive checking for the condition. 
        Real fix should be in r15058.  Watching hudson again.
      id: 12960125
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMg
      updated_at: '2013-01-31T19:13:28Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960127'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:28Z'
      body: '[straszheim] Fixed!'
      id: 12960127
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMh
      updated_at: '2013-01-31T19:13:28Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960128'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:28Z'
      body: '[straszheim] in r15289 there may be code that revives this deadlock.'
      id: 12960128
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMi
      updated_at: '2013-01-31T19:13:29Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960129'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:29Z'
      body: >-
        [gerkey] Indeed, it's been unfixed by r15289.  r15295 disables the test
        for this bug.  It should be re-enabled after it's re-fixed.
      id: 12960129
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMj
      updated_at: '2013-01-31T19:13:29Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960130'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:29Z'
      body: "[vlopez] Do you have an estimate time of when will these be fixed? Will it make it into Fuerte?\r\n\r\nThis bug is preventing us from using persistent services.\r\n\r\nAnd using non-persistent services is giving us many problems since each non-persistent service call uses up to 2 system sockets and we're running out of sockets on heavy service usage situations.\r\n\r\nSystem sockets are not completely freed until 1-2minutes have passed since they were closed, and if the system runs out of sockets the load average skyrockets and the system slows down."
      id: 12960130
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMk
      updated_at: '2013-01-31T19:13:30Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960131'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:30Z'
      body: "[jrcapriles] Replying to [comment:13 kwc]:\r\n\r\nI'm working with ROS Electric and I found out the same problem. I've a state machine who has several persistence connections to service servers. When I switch between states sometimes I kill/launch nodes. The problem that I have is if I kill a node which had a service server that had been already called once, when the node starts again and my service client in the state machine call it, it hangs. How is the situation about this ticket? Is there any alternative solution?"
      id: 12960131
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMl
      updated_at: '2013-01-31T19:13:30Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960134'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:30Z'
      body: >-
        [akimmel] I am also having this issue running ROS Electric on Mac
        10.7.4, and I was wondering if there is a workaround for this issue.  I
        am running a few different nodes which each have several persistent
        services running, and I encounter this same problem when executing the
        ros::service::call method between the nodes.
      id: 12960134
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMm
      updated_at: '2013-01-31T19:13:31Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960135'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:31Z'
      body: "[vlopez] I'm still struggling with this issue.\r\n\r\nI have found something that might be related to the cause of the problem.\r\nServices use TCP connection, when the server dies, the client should be notified because the connection has dropped.\r\n\r\nBut after the service server crashes, the socket is in WAIT status for as long as 2 minutes (depending on the configuration of the computer), until the TCP socket is finally closed, the server disconnection is not noticed and the client is susceptible to be blocked forever when calling."
      id: 12960135
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UQx3zr01Q9/iAAMn
      updated_at: '2013-01-31T19:13:32Z'
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/12960136'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      user:
        type: User
        received_events_url: 'https://api.github.com/users/tfoote/received_events'
        url: 'https://api.github.com/users/tfoote'
        organizations_url: 'https://api.github.com/users/tfoote/orgs'
        gists_url: 'https://api.github.com/users/tfoote/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/tfoote/starred{/owner}{/repo}'
        gravatar_id: 7dd5d644088bc8f9afa3573ce85e429c
        repos_url: 'https://api.github.com/users/tfoote/repos'
        followers_url: 'https://api.github.com/users/tfoote/followers'
        subscriptions_url: 'https://api.github.com/users/tfoote/subscriptions'
        following_url: 'https://api.github.com/users/tfoote/following'
        events_url: 'https://api.github.com/users/tfoote/events{/privacy}'
        avatar_url: >-
          https://secure.gravatar.com/avatar/7dd5d644088bc8f9afa3573ce85e429c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        id: 447804
        login: tfoote
      created_at: '2013-01-31T19:13:32Z'
      body: '[asomerville] related to #2913'
      id: 12960136
      owner: ros
      repo: ros_comm
      issue_id: 149
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> UR1J7r01Q1r8AAS0
      url: 'https://api.github.com/repos/ros/ros_comm/issues/comments/13227456'
      issue_url: 'https://api.github.com/repos/ros/ros_comm/issues/10513271'
      id: 13227456
      user:
        login: LopezV
        id: 3469405
        avatar_url: >-
          https://secure.gravatar.com/avatar/441581ed0d88303764d0971c84961d4d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
        gravatar_id: 441581ed0d88303764d0971c84961d4d
        url: 'https://api.github.com/users/LopezV'
        followers_url: 'https://api.github.com/users/LopezV/followers'
        following_url: 'https://api.github.com/users/LopezV/following'
        gists_url: 'https://api.github.com/users/LopezV/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/LopezV/starred{/owner}{/repo}'
        subscriptions_url: 'https://api.github.com/users/LopezV/subscriptions'
        organizations_url: 'https://api.github.com/users/LopezV/orgs'
        repos_url: 'https://api.github.com/users/LopezV/repos'
        events_url: 'https://api.github.com/users/LopezV/events{/privacy}'
        received_events_url: 'https://api.github.com/users/LopezV/received_events'
        type: User
      created_at: '2013-02-07T09:12:40Z'
      updated_at: '2013-02-07T09:12:40Z'
      body: "I'm unable to attach the file that reproduced the issue. For the record it is here: https://code.ros.org/trac/ros/attachment/ticket/2742/main.cpp\r\n"
      repo: ros_comm
      owner: ros
      issue_id: 149
- _id:
    _bsontype: ObjectID
    id: !<tag:yaml.org,2002:binary> Uqc8RL01Q6EaAAFW
  url: 'https://api.github.com/repos/ros-industrial/industrial_core/issues/45'
  labels_url: >-
    https://api.github.com/repos/ros-industrial/industrial_core/issues/45/labels{/name}
  comments_url: >-
    https://api.github.com/repos/ros-industrial/industrial_core/issues/45/comments
  events_url: 'https://api.github.com/repos/ros-industrial/industrial_core/issues/45/events'
  html_url: 'https://github.com/ros-industrial/industrial_core/issues/45'
  id: 23706491
  number: 45
  title: 'CMake targets should be prefixed by ${PROJECT_NAME}'
  user:
    login: gavanderhoorn
    id: 4550046
    avatar_url: 'https://identicons.github.com/102affc52ecaa02a58f70343f8f53b2b.png'
    gravatar_id: null
    url: 'https://api.github.com/users/gavanderhoorn'
    html_url: 'https://github.com/gavanderhoorn'
    followers_url: 'https://api.github.com/users/gavanderhoorn/followers'
    following_url: 'https://api.github.com/users/gavanderhoorn/following{/other_user}'
    gists_url: 'https://api.github.com/users/gavanderhoorn/gists{/gist_id}'
    starred_url: 'https://api.github.com/users/gavanderhoorn/starred{/owner}{/repo}'
    subscriptions_url: 'https://api.github.com/users/gavanderhoorn/subscriptions'
    organizations_url: 'https://api.github.com/users/gavanderhoorn/orgs'
    repos_url: 'https://api.github.com/users/gavanderhoorn/repos'
    events_url: 'https://api.github.com/users/gavanderhoorn/events{/privacy}'
    received_events_url: 'https://api.github.com/users/gavanderhoorn/received_events'
    type: User
    site_admin: false
  labels:
    - url: 'https://api.github.com/repos/ros-industrial/industrial_core/labels/bug'
      name: bug
      color: fc2929
  state: open
  assignee: null
  milestone: null
  comments: 0
  created_at: '2013-12-04T10:32:04Z'
  updated_at: '2013-12-04T10:32:04Z'
  closed_at: null
  pull_request:
    html_url: null
    diff_url: null
    patch_url: null
  body: "See ros-industrial/ros_industrial_issues#8.\r\n"
  repo: industrial_core
  owner: ros-industrial
  data_comments:
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> Uq63Yr01QxbqA9M9
      url: >-
        https://api.github.com/repos/ros-industrial/industrial_core/issues/comments/30643017
      html_url: >-
        https://github.com/ros-industrial/industrial_core/issues/45#issuecomment-30643017
      issue_url: 'https://api.github.com/repos/ros-industrial/industrial_core/issues/45'
      id: 30643017
      user:
        login: gavanderhoorn
        id: 4550046
        avatar_url: 'https://identicons.github.com/102affc52ecaa02a58f70343f8f53b2b.png'
        gravatar_id: null
        url: 'https://api.github.com/users/gavanderhoorn'
        html_url: 'https://github.com/gavanderhoorn'
        followers_url: 'https://api.github.com/users/gavanderhoorn/followers'
        following_url: 'https://api.github.com/users/gavanderhoorn/following{/other_user}'
        gists_url: 'https://api.github.com/users/gavanderhoorn/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/gavanderhoorn/starred{/owner}{/repo}'
        subscriptions_url: 'https://api.github.com/users/gavanderhoorn/subscriptions'
        organizations_url: 'https://api.github.com/users/gavanderhoorn/orgs'
        repos_url: 'https://api.github.com/users/gavanderhoorn/repos'
        events_url: 'https://api.github.com/users/gavanderhoorn/events{/privacy}'
        received_events_url: 'https://api.github.com/users/gavanderhoorn/received_events'
        type: User
        site_admin: false
      created_at: '2013-12-16T08:18:39Z'
      updated_at: '2013-12-16T08:18:39Z'
      body: "This is actually more involved than just prefixing all targets with the project_name variable due to the way `simple_message` and `industrial_robot_client` build and export their libraries (#46). The fact that CMake resolves linking dependencies at configuration time makes it impossible to depend on renamed targets (ie, depend on `foo` instead of `foo-before-rename`).\r\n\r\nWithout exporting the `simple_message` and `industrial_robot_client` library targets in the `catkin_package(..)` statement, end-users will have to explicitly depend on `industrial_robot_client_industrial_robot_client` or `simple_message_simple_message_bswap`. It is probably best to first sort out the issues described in #46.\r\n"
      repo: industrial_core
      owner: ros-industrial
      issue_id: 45
    - _id:
        _bsontype: ObjectID
        id: !<tag:yaml.org,2002:binary> VNQ3S701Q29uAMqR
      url: >-
        https://api.github.com/repos/ros-industrial/industrial_core/issues/comments/73178214
      html_url: >-
        https://github.com/ros-industrial/industrial_core/issues/45#issuecomment-73178214
      issue_url: 'https://api.github.com/repos/ros-industrial/industrial_core/issues/45'
      id: 73178214
      user:
        login: shaun-edwards
        id: 2932571
        avatar_url: 'https://avatars.githubusercontent.com/u/2932571?v=3'
        gravatar_id: ''
        url: 'https://api.github.com/users/shaun-edwards'
        html_url: 'https://github.com/shaun-edwards'
        followers_url: 'https://api.github.com/users/shaun-edwards/followers'
        following_url: 'https://api.github.com/users/shaun-edwards/following{/other_user}'
        gists_url: 'https://api.github.com/users/shaun-edwards/gists{/gist_id}'
        starred_url: 'https://api.github.com/users/shaun-edwards/starred{/owner}{/repo}'
        subscriptions_url: 'https://api.github.com/users/shaun-edwards/subscriptions'
        organizations_url: 'https://api.github.com/users/shaun-edwards/orgs'
        repos_url: 'https://api.github.com/users/shaun-edwards/repos'
        events_url: 'https://api.github.com/users/shaun-edwards/events{/privacy}'
        received_events_url: 'https://api.github.com/users/shaun-edwards/received_events'
        type: User
        site_admin: false
      created_at: '2015-02-06T03:38:45Z'
      updated_at: '2015-02-06T03:38:45Z'
      body: >-
        This was scheduled for `indigo`, but it only applies to `simple_message`
        and `industrial_robot_client` which cannot be fixed as stated above.
      repo: industrial_core
      owner: ros-industrial
      issue_id: 45
- _id:
    _bsontype: ObjectID
    id: !<tag:yaml.org,2002:binary> WaQtp2SA/fEaXqRu
  url: 'https://api.github.com/repos/pyros-dev/catkin_pip/issues/55'
  repository_url: 'https://api.github.com/repos/pyros-dev/catkin_pip'
  labels_url: 'https://api.github.com/repos/pyros-dev/catkin_pip/issues/55/labels{/name}'
  comments_url: 'https://api.github.com/repos/pyros-dev/catkin_pip/issues/55/comments'
  events_url: 'https://api.github.com/repos/pyros-dev/catkin_pip/issues/55/events'
  html_url: 'https://github.com/pyros-dev/catkin_pip/issues/55'
  id: 192761439
  number: 55
  title: OSError with catkin_make
  user:
    login: naveedhd
    id: 3486082
    avatar_url: 'https://avatars2.githubusercontent.com/u/3486082?v=4'
    gravatar_id: ''
    url: 'https://api.github.com/users/naveedhd'
    html_url: 'https://github.com/naveedhd'
    followers_url: 'https://api.github.com/users/naveedhd/followers'
    following_url: 'https://api.github.com/users/naveedhd/following{/other_user}'
    gists_url: 'https://api.github.com/users/naveedhd/gists{/gist_id}'
    starred_url: 'https://api.github.com/users/naveedhd/starred{/owner}{/repo}'
    subscriptions_url: 'https://api.github.com/users/naveedhd/subscriptions'
    organizations_url: 'https://api.github.com/users/naveedhd/orgs'
    repos_url: 'https://api.github.com/users/naveedhd/repos'
    events_url: 'https://api.github.com/users/naveedhd/events{/privacy}'
    received_events_url: 'https://api.github.com/users/naveedhd/received_events'
    type: User
    site_admin: false
  labels:
    - id: 350291291
      url: 'https://api.github.com/repos/pyros-dev/catkin_pip/labels/bug'
      name: bug
      color: ee0701
      default: true
  state: open
  locked: false
  assignee: null
  assignees: []
  milestone: null
  comments: 2
  created_at: '2016-12-01T06:03:21Z'
  updated_at: '2016-12-06T10:17:24Z'
  closed_at: null
  body: "\r\n```\r\n-- +++ processing catkin package: 'pyros_config'\r\n-- ==> add_subdirectory(pyros_config)\r\n-- Loading catkin-pip.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-requirements.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-prefix.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-env.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-runcmd.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-setup.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-env.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-runcmd.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-prefix.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\nCMake Warning (dev) at /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-env.cmake:27 (message):\r\n  Incomplete catkin-pip setup detected.This is expected if you use catkin-pip\r\n  from source, and did not source the current develspace yet.Quick patch will\r\n  be applied to the current cmake process environment.\r\nCall Stack (most recent call first):\r\n  /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-prefix.cmake:127 (catkin_pip_check_env)\r\n  /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip.cmake:63 (catkin_pip_setup_prefix)\r\n  /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin_pipConfig.cmake:190 (include)\r\n  /opt/ros/indigo/share/catkin/cmake/catkinConfig.cmake:76 (find_package)\r\n  pyros_config/CMakeLists.txt:11 (find_package)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n\r\n-- Adding /opt/groot/bootstrap_ws/build/catkin_pip_env/lib/python2.7/site-packages to PYTHONPATH\r\n-- Adding /opt/groot/bootstrap_ws/build/catkin_pip_env/bin to PATH\r\n-- Catkin pip PYTHONPATH : /opt/groot/bootstrap_ws/build/catkin_pip_env/lib/python2.7/site-packages:/opt/groot/bootstrap_ws/devel/lib/python2.7/site-packages:/opt/groot/bootstrap_ws/devel/lib/python2.7/dist-packages:/opt/groot/messages_ws/devel/lib/python2.7/dist-packages:/opt/yujin/amd64/indigo-devel/lib/python2.7/dist-packages:/opt/ros/indigo/lib/python2.7/dist-packages:/opt/groot/bootstrap_ws/src/pyros\r\n-- Catkin pip PATH : /opt/groot/bootstrap_ws/build/catkin_pip_env/bin:/opt/groot/messages_ws/devel/bin:/opt/yujin/amd64/indigo-devel/bin:/opt/ros/indigo/bin:/usr/local/heroku/bin:/home/naveed/.nvm/versions/node/v7.0.0/bin:/home/naveed/.rvm/gems/ruby-2.2.4/bin:/home/naveed/.rvm/gems/ruby-2.2.4@global/bin:/home/naveed/.rvm/rubies/ruby-2.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/naveed/.rvm/bin:/home/naveed/.rvm/bin\r\n--     ... Catkin pip was not found in /opt/groot/bootstrap_ws/build/catkin_pip_env/bin ...\r\n--     System pip version detected : 1.5.4\r\n--     System pip install detected options : \r\n--       --user\r\n--     ... Retrieving catkin_pip requirements using system pip ...\r\n--     ... Done ... [0]: \r\n--     ... Running python -m pip install --ignore-installed -r /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-fixups.req --src /opt/groot/bootstrap_ws/src --exists-action b --prefix /opt/groot/bootstrap_ws/build/catkin_pip_env ...\r\n--     ... Done ... [0]: Collecting pip (from -r /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-base.req (line 3))\r\n  Using cached pip-9.0.1-py2.py3-none-any.whl\r\nCollecting setuptools (from -r /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-base.req (line 4))\r\n  Using cached setuptools-29.0.1-py2.py3-none-any.whl\r\nCollecting nose (from -r /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-fixups.req (line 7))\r\n  Using cached nose-1.3.7-py2-none-any.whl\r\nCollecting pytest (from -r /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-fixups.req (line 9))\r\n  Using cached pytest-3.0.4-py2.py3-none-any.whl\r\nCollecting pytest-cov (from -r /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-fixups.req (line 10))\r\n  Using cached pytest_cov-2.4.0-py2.py3-none-any.whl\r\nCollecting pytest-timeout (from -r /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-fixups.req (line 11))\r\n  Using cached pytest_timeout-1.2.0-py2.py3-none-any.whl\r\nCollecting py>=1.4.29 (from pytest->-r /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-fixups.req (line 9))\r\n  Using cached py-1.4.31-py2.py3-none-any.whl\r\nCollecting coverage>=3.7.1 (from pytest-cov->-r /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-fixups.req (line 10))\r\nInstalling collected packages: pip, setuptools, nose, py, pytest, coverage, pytest-cov, pytest-timeout\r\nSuccessfully installed coverage-4.2 nose-1.3.7 pip-9.0.1 py-1.4.31 pytest-3.0.4 pytest-cov-2.4.0 pytest-timeout-1.2.0 setuptools-29.0.1\r\n\r\n-- Found catkin_pip pip command at /opt/groot/bootstrap_ws/build/catkin_pip_env/bin/pip.\r\n-- Loading catkin-pip-env.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-runcmd.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-setup.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-prefix.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Loading catkin-pip-requirements.cmake from /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake... \r\n-- Catkin_pip using Python nosetests: /opt/groot/bootstrap_ws/build/catkin_pip_env/bin/nosetests-2.7\r\n-- Catkin_pip using Python py.test: /opt/groot/bootstrap_ws/build/catkin_pip_env/bin/py.test\r\n-- Catkin_pip using Python nosetests: /opt/groot/bootstrap_ws/build/catkin_pip_env/bin/nosetests-2.7\r\n--     ... Running /opt/groot/bootstrap_ws/build/catkin_pip_env/bin/pip install -e /opt/groot/bootstrap_ws/src/pyros_config --no-dependencies --prefix /opt/groot/bootstrap_ws/devel ...\r\n--     ... Done ... [2]: Obtaining file:///opt/groot/bootstrap_ws/src/pyros_config\r\nInstalling collected packages: pyros-config\r\n  Found existing installation: pyros-config 0.1.5\r\n    Uninstalling pyros-config-0.1.5:\r\n\r\n-- Command /opt/groot/bootstrap_ws/build/catkin_pip_env/bin/pip install -e /opt/groot/bootstrap_ws/src/pyros_config --no-dependencies --prefix /opt/groot/bootstrap_ws/devel FAILED !\r\nCMake Error at /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-runcmd.cmake:37 (message):\r\n  Exception:\r\n\r\n  Traceback (most recent call last):\r\n\r\n    File \"/opt/groot/bootstrap_ws/build/catkin_pip_env/lib/python2.7/site-packages/pip/basecommand.py\", line 215, in main\r\n      status = self.run(options, args)\r\n    File \"/opt/groot/bootstrap_ws/build/catkin_pip_env/lib/python2.7/site-packages/pip/commands/install.py\", line 342, in run\r\n      prefix=options.prefix_path,\r\n    File \"/opt/groot/bootstrap_ws/build/catkin_pip_env/lib/python2.7/site-packages/pip/req/req_set.py\", line 778, in install\r\n      requirement.uninstall(auto_confirm=True)\r\n    File \"/opt/groot/bootstrap_ws/build/catkin_pip_env/lib/python2.7/site-packages/pip/req/req_install.py\", line 754, in uninstall\r\n      paths_to_remove.remove(auto_confirm)\r\n    File \"/opt/groot/bootstrap_ws/build/catkin_pip_env/lib/python2.7/site-packages/pip/req/req_uninstall.py\", line 115, in remove\r\n      renames(path, new_path)\r\n    File \"/opt/groot/bootstrap_ws/build/catkin_pip_env/lib/python2.7/site-packages/pip/utils/__init__.py\", line 267, in renames\r\n      shutil.move(old, new)\r\n    File \"/usr/lib/python2.7/shutil.py\", line 300, in move\r\n      rmtree(src)\r\n    File \"/usr/lib/python2.7/shutil.py\", line 252, in rmtree\r\n      onerror(os.remove, fullname, sys.exc_info())\r\n    File \"/usr/lib/python2.7/shutil.py\", line 250, in rmtree\r\n      os.remove(fullname)\r\n\r\n  OSError: [Errno 13] Permission denied:\r\n  '/opt/ros/indigo/lib/python2.7/dist-packages/pyros_config/_version.py'\r\n\r\nCall Stack (most recent call first):\r\n  /opt/groot/bootstrap_ws/devel/share/catkin_pip/cmake/catkin-pip-setup.cmake:97 (catkin_pip_runcmd)\r\n  pyros_config/CMakeLists.txt:16 (catkin_pip_setup)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/opt/groot/bootstrap_ws/build/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/opt/groot/bootstrap_ws/build/CMakeFiles/CMakeError.log\".\r\nInvoking \"cmake\" failed\r\n```\r\n"
  closed_by: null
  repo: catkin_pip
  owner: pyros-dev
  data_comments: []
